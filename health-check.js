import { checkBinary } from "./utils.js";
import { ytDlpPath } from "./config.js";

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–Ω–∞—Ä–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
export const checkDependencies = () => {
  console.log("üîç –ü—Ä–æ–≤–µ—Ä—è—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...");

  const ytCheck = checkBinary(ytDlpPath, ["--version"]);
  if (!ytCheck.ok) {
    console.warn(
      `‚ö†Ô∏è  yt-dlp –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –ø–æ –ø—É—Ç–∏ '${ytDlpPath}'. –û—à–∏–±–∫–∞: ${ytCheck.error}`
    );
  } else {
    console.log(`‚úÖ yt-dlp –Ω–∞–π–¥–µ–Ω: ${ytCheck.stdout}`);
  }

  const ffmpegCheck = checkBinary("ffmpeg", ["-version"]);
  if (!ffmpegCheck.ok) {
    console.warn(
      `‚ö†Ô∏è  ffmpeg –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è. –°–ª–∏—è–Ω–∏–µ –≤–∏–¥–µ–æ/–∞—É–¥–∏–æ –º–æ–∂–µ—Ç –ø–∞–¥–∞—Ç—å. –û—à–∏–±–∫–∞: ${ffmpegCheck.error}`
    );
  } else {
    console.log(`‚úÖ ffmpeg –Ω–∞–π–¥–µ–Ω`);
  }

  return {
    ytDlp: ytCheck.ok,
    ffmpeg: ffmpegCheck.ok,
  };
};
