import TelegramBot from "node-telegram-bot-api";
import { exec } from "child_process";
import fs from "fs";
import path from "path";
import "dotenv/config";

// === –ù–ê–°–¢–†–û–ô–ö–ò ===
const token = process.env.BOT_TOKEN;
const downloadDir = "./downloads";
if (!fs.existsSync(downloadDir)) fs.mkdirSync(downloadDir);

if (!token) {
  console.error("–ù–µ –∑–∞–¥–∞–Ω BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.");
  process.exit(1);
}

// –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Ç–æ–ª—å–∫–æ –æ–Ω–∏ –º–æ–≥—É—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ)
const allowedUsersEnv = process.env.ALLOWED_USERS || "";
const allowedUsers = allowedUsersEnv
  .split(",")
  .map((s) => s.trim())
  .filter(Boolean)
  .map((s) => Number(s))
  .filter((n) => !Number.isNaN(n));

// —Å–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
const bot = new TelegramBot(token, { polling: true });

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const text = msg.text?.trim();

  // –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞
  if (!allowedUsers.includes(userId)) {
    bot.sendMessage(chatId, "üö´ –£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É");
    return;
  }

  // –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
  if (text.startsWith("/")) return;

  if (!text || (!text.includes("youtube.com") && !text.includes("youtu.be"))) {
    bot.sendMessage(chatId, "–ü—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube üé•");
    return;
  }

  bot.sendMessage(chatId, "–°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ –¥–æ 1080p... ‚è≥");

  const outputTemplate = path.join(downloadDir, "%(title).100s.%(ext)s");
  const cmd = `yt-dlp -f "bv*[height<=1080]+ba/best" -o "${outputTemplate}" "${text}"`;

  exec(cmd, async (error) => {
    if (error) {
      bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: ${error.message}`);
      return;
    }

    try {
      // –Ω–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∫–∞—á–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
      const files = fs
        .readdirSync(downloadDir)
        .map((f) => ({
          name: f,
          time: fs.statSync(path.join(downloadDir, f)).mtime,
        }))
        .sort((a, b) => b.time - a.time);

      const filePath = path.join(downloadDir, files[0].name);

      // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram –∫–∞–∫ –≤–∏–¥–µ–æ
      await bot.sendVideo(chatId, filePath);

      // —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
      fs.unlinkSync(filePath);
    } catch (e) {
      bot.sendMessage(chatId, `–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ: ${e.message}`);
    }
  });
});
